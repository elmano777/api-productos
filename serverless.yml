org: rolandodiaz
service: api-productos

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::409362080365:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_productos
    BUCKET_NAME: ${sls:stage}-inkafarma-productos-imagenes
    JWT_SECRET: mi-super-secreto-jwt-2025

functions:
  listar-productos:
    handler: productos.listarProductos
    events:
      - http:
          path: /productos/listar
          method: get
          cors: true
          integration: lambda

  crear-producto:
    handler: productos.crearProducto
    events:
      - http:
          path: /productos/crear
          method: post
          cors: true
          integration: lambda

  buscar-producto:
    handler: productos.buscarProducto
    events:
      - http:
          path: /productos/buscar/{codigo}
          method: get
          cors: true
          integration: lambda

  modificar-producto:
    handler: productos.modificarProducto
    events:
      - http:
          path: /productos/modificar/{codigo}
          method: put
          cors: true
          integration: lambda

  eliminar-producto:
    handler: productos.eliminarProducto
    events:
      - http:
          path: /productos/eliminar/{codigo}
          method: delete
          cors: true
          integration: lambda

  subir-imagen:
    handler: productos.subirImagen
    events:
      - http:
          path: /productos/subir-imagen
          method: post
          cors: true
          integration: lambda

  generar-url-subida:
    handler: productos.generarUrlSubida
    events:
      - http:
          path: /productos/generar-url-subida
          method: get
          cors: true
          integration: lambda

resources:
  Resources:
    # Tabla DynamoDB
    TablaProductos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: codigo
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: codigo
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    # Bucket S3 para imágenes
    BucketImagenes:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - "*"
              MaxAge: 3000

    # Política del bucket para permitir acceso público a las imágenes
    BucketImagenesPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref BucketImagenes
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${BucketImagenes}/*"
      DependsOn: BucketImagenes